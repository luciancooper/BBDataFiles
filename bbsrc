#!/usr/bin/env python

import os
from progress import IncrementalBar

##  bbsrc eve 1990-2016 ~/bbsrc/files/eve
def eve(years,outdir):
    from retro.eve import simEVE
    for year in years:
        with open(f'{outdir}/{year}.txt','w') as f:
            for l in simEVE(year):
                print(l,file=f)


##  bbsrc ros 1990-2016 ~/bbsrc/files/ros
def ros(years,outdir):
    from retro.misc import simROS
    for year in years:
        with open(f'{outdir}/{year}.txt','w') as f:
            for l in simROS(year):
                print(l,file=f)

##  bbsrc ctx 1990-2016 ~/bbsrc/files/ctx
def ctx(years,outdir):
    from retro.misc import simCTX
    for year in years:
        with open(f'{outdir}/{year}.txt','w') as f:
            for l in simCTX(year):
                print(l,file=f)


##  bbsrc team 1990-2016 ~/bbsrc/files/team
def team(years,outdir):
    from retro.misc import simTEAM
    for year in years:
        with open(f'{outdir}/{year}.txt','w') as f:
            for l in simTEAM(year):
                print(l,file=f)

## bbsrc gid 1990-2016 ~/bbsrc/files/gid
def gid(years,outdir):
    from retro.misc import simGID
    for year in years:
        with open(f'{outdir}/{year}.txt','w') as f:
            for l in simGID(year):
                print(l,file=f)


### Parse Years

def parse_years(arg):
    years = set()
    for a in arg.split(','):
        if '-' in a:
            y0,y1 = map(int,a.split('-'))
            years |= set(range(y0,y1+1))
        else:
            years |= {int(a)}
    years = list(years)
    years.sort()
    return years

### Verify Directory

def verify_dir(path):
    if len(path) and not os.path.exists(path):
        verify_dir(os.path.dirname(path))
        os.mkdir(path)

### Main
def main():
    import argparse
    parser = argparse.ArgumentParser(description="Baseball Source File Compiler")
    parser.add_argument('type',choices=['gid','eve','ros','ctx','team'],help='File category to compile')
    parser.add_argument('years',type=parse_years,help='years to compile')
    parser.add_argument('outdir',type=str,help='folder to put compiled files into')
    args = parser.parse_args()
    years = args.years
    outdir = args.outdir
    if os.path.exists(outdir) and not os.path.isdir(outdir):
        print(f"error: '{outdir}' exists and is not a directory")
        return
    verify_dir(outdir)
    yiter = IncrementalBar(prefix=args.type).iter(years)
    if args.type == 'gid':
        gid(yiter,outdir)
    elif args.type == 'eve':
        eve(yiter,outdir)
    elif args.type == 'ros':
        ros(yiter,outdir)
    elif args.type == 'ctx':
        ctx(yiter,outdir)
    elif args.type == 'team':
        team(yiter,outdir)


if __name__=='__main__':
    main()
